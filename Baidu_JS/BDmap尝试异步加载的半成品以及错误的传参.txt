<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>计算驾车时间与距离</title>
    <style>
        html,
        body {
            width: 100%;
            height: 100%;
            padding: 0;
            margin: 0;
        }

        #allmap {
            width: 100%;
            height: 100%;
            overflow: hidden;
        }
    </style>
</head>

<body>
    <div id='allmap'></div>

    <script>
        var script = document.createElement('script');
        script.src = 'https://api.map.baidu.com/api?type=webgl&v=3.0&ak=x1NFe6qIPjbg0CimviwmMxW5ycXKZeG2';
        script.onload = function() {
            var map = new BMapGL.Map("allmap");
            map.centerAndZoom(new BMapGL.Point(113.411968, 23.054905), 12);

            // 定义全局变量用于保存计算结果
            var duration = "";
            var distance = "";

            var searchComplete = function(results) {
                if (transit.getStatus() != BMAP_STATUS_SUCCESS) {
                    return;
                }
                var plan = results.getPlan(0);
                duration = plan.getDuration(true); // 获取时间
                distance = plan.getDistance(true); // 获取距离

                // 在计算完成后，可以根据需要执行进一步的操作，或将结果返回给QT
                // 例如，可以通过调用Qt的槽函数，将计算结果传递给QT进行显示
                bridge.distanceAndTimeCalculated(duration, distance);
            }

            var transit = new BMapGL.DrivingRoute(map, {
                renderOptions: { map: map },
                onSearchComplete: searchComplete,
                onPolylinesSet: function() {
                    setTimeout(function() { alert(output) }, "1000");
                }
            });

            function calculateDistanceAndTime(start, end) {
                // 使用传递的起点和终点进行距离和时间计算
                var startPt = new BMapGL.Point(start);
                var endPt = new BMapGL.Point(end);
                transit.search(startPt, endPt);
            }

            // 在QT中注册bridge对象
            var bridge = new QWebChannel(qt.webChannelTransport, function(channel) {
                var bridgeObject = channel.objects.bridge;

                // 定义bridge的distanceAndTimeCalculated函数
                bridgeObject.distanceAndTimeCalculated.connect(function(duration, distance) {
                    // 这里可以执行QT的相关操作，例如更新文本框等
                    console.log("Duration: " + duration);
                    console.log("Distance: " + distance);
                });
            });
        };
        document.body.appendChild(script);
    </script>
</body>

</html>

